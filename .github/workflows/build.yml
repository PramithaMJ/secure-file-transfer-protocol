name: Build

on:
  push:
    branches:
      - new-main


jobs:
  build:
    name: Build and analyze
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      # Set up Java to ensure compatibility with SonarQube scanner
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          
      # Compile Java code for SonarQube analysis
      - name: Compile Java code
        run: |
          mkdir -p target/classes
          find src -name "*.java" > sources.txt
          if [ -s sources.txt ]; then
            javac -d target/classes @sources.txt
            echo "Java compilation successful"
          else
            echo "No Java source files found"
            # Create an empty directory to satisfy SonarQube
            mkdir -p target/classes
          fi
      
      # Cache SonarQube scanner binaries to speed up builds
      - name: Cache SonarQube scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      # Run SonarQube scan with workaround for unbound variable issue
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.0.0  # Using a specific version that's more stable
        with:
          args: >
            -Dsonar.verbose=true
            -Dsonar.log.level=DEBUG
            -Dsonar.projectBaseDir=${{ github.workspace }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}